{
    "vsc_keybindings_history": [
        {
            "date": "2023-09-09 23:10:03",
            "keybindings": "// Place your key bindings in this file to override the defaults\n[\n    {\n        \"key\": \"ctrl+tab\",\n        \"command\": \"-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\",\n        \"when\": \"!activeEditorGroupEmpty\"\n    },\n    {\n        \"key\": \"ctrl+shift+tab\",\n        \"command\": \"-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\",\n        \"when\": \"!activeEditorGroupEmpty\"\n    },\n    {\n        \"key\": \"ctrl+tab\",\n        \"command\": \"workbench.action.nextEditorInGroup\"\n    },\n    {\n        \"key\": \"ctrl+shift+tab\",\n        \"command\": \"workbench.action.previousEditorInGroup\"\n    },\n    {\n        \"key\": \"shift+alt+d\",\n        \"command\": \"-editor.detectLanguage\",\n        \"when\": \"editorTextFocus && !notebookEditable\"\n    },\n    {\n        \"key\": \"shift+alt+d\",\n        \"command\": \"-notebook.cell.detectLanguage\",\n        \"when\": \"notebookCellEditable && notebookEditable\"\n    },\n    {\n        \"key\": \"shift+alt+a\",\n        \"command\": \"editor.foldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"shift+alt+o\",\n        \"command\": \"-editor.action.organizeImports\",\n        \"when\": \"editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\\\s|^)source\\\\.organizeImports\\\\b/\"\n    },\n    {\n        \"key\": \"shift+alt+o\",\n        \"command\": \"editor.action.insertLineBefore\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+k\",\n        \"command\": \"editor.action.moveLinesUpAction\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+j\",\n        \"command\": \"editor.action.moveLinesDownAction\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"ctrl+numpad0\",\n        \"command\": \"-workbench.action.zoomReset\"\n    },\n    {\n        \"key\": \"shift+alt+e\",\n        \"command\": \"-PowerShell.ExpandAlias\",\n        \"when\": \"editorTextFocus && editorLangId == 'powershell'\"\n    },\n    {\n        \"key\": \"shift+alt+s\",\n        \"command\": \"editor.unfoldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"ctrl+k ctrl+j\",\n        \"command\": \"-editor.unfoldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"alt+4\",\n        \"command\": \"references-view.findReferences\",\n        \"when\": \"editorHasReferenceProvider\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"-toggleFindInSelection\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"-toggleSearchEditorContextLines\",\n        \"when\": \"inSearchEditor\"\n    },\n    {\n        \"key\": \"alt+h\",\n        \"command\": \"-testing.toggleTestingPeekHistory\",\n        \"when\": \"testing.isPeekVisible\"\n    },\n    {\n        \"key\": \"alt+h\",\n        \"command\": \"cursorLeft\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"cursorRight\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"cursorUp\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"-keybindings.editor.recordSearchKeys\",\n        \"when\": \"inKeybindings && inKeybindingsSearch\"\n    },\n    {\n        \"key\": \"alt+j\",\n        \"command\": \"cursorDown\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+u\",\n        \"command\": \"undo\"\n    },\n    {\n        \"key\": \"alt+j\",\n        \"command\": \"selectNextSuggestion\",\n        \"when\": \"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"selectPrevSuggestion\",\n        \"when\": \"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"editor.action.insertLineAfter\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"-C_Cpp.SwitchHeaderSource\",\n        \"when\": \"editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'\"\n    },\n    {\n        \"key\": \"alt+1\",\n        \"command\": \"-workbench.action.openEditorAtIndex1\"\n    },\n    {\n        \"key\": \"alt+`\",\n        \"command\": \"workbench.action.navigateBack\",\n        \"when\": \"canNavigateBack\"\n    },\n    {\n        \"key\": \"alt+2\",\n        \"command\": \"-workbench.action.openEditorAtIndex2\"\n    },\n    {\n        \"key\": \"alt+1\",\n        \"command\": \"editor.action.revealDeclaration\",\n        \"when\": \"editorHasDeclarationProvider && editorTextFocus && !isInEmbeddedEditor\"\n    },\n    {\n        \"key\": \"alt+3\",\n        \"command\": \"-workbench.action.openEditorAtIndex3\"\n    },\n    {\n        \"key\": \"alt+2\",\n        \"command\": \"editor.action.revealDefinition\",\n        \"when\": \"editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\"\n    },\n    {\n        \"key\": \"alt+4\",\n        \"command\": \"-workbench.action.openEditorAtIndex4\"\n    },\n    {\n        \"key\": \"alt+3\",\n        \"command\": \"editor.action.goToTypeDefinition\",\n        \"when\": \"editorHasTypeDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\",\n    },\n    {\n        \"key\": \"alt+5\",\n        \"command\": \"-workbench.action.openEditorAtIndex5\"\n    },\n    {\n        \"key\": \"alt+6\",\n        \"command\": \"-workbench.action.openEditorAtIndex6\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleSearchEditorWholeWord\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleFindWholeWord\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleSearchWholeWord\",\n        \"when\": \"searchViewletFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-workbench.action.terminal.toggleFindWholeWord\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"cursorWordEndRight\",\n        \"when\": \"textInputFocus && !accessibilityModeEnabled\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleSearchEditorRegex\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-workbench.action.terminal.toggleFindRegex\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleFindRegex\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleSearchRegex\",\n        \"when\": \"searchViewletFocus\"\n    },\n    {\n        \"key\": \"alt+a\",\n        \"command\": \"cursorLineStart\"\n    },\n    {\n        \"key\": \"alt+s\",\n        \"command\": \"cursorLineEnd\"\n    },\n    {\n        \"key\": \"alt+d\",\n        \"command\": \"deleteWordLeft\",\n        \"when\": \"textInputFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"-workbench.action.terminal.sizeToContentWidth\",\n        \"when\": \"terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"-editor.action.toggleWordWrap\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"editor.action.quickFix\",\n        \"when\": \"editorHasCodeActionsProvider && editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+x\",\n        \"command\": \"deleteLeft\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"-toggleSearchEditorCaseSensitive\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"-workbench.action.terminal.toggleFindCaseSensitive\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"editor.action.transformToTitlecase\"\n    },\n    {\n        \"key\": \"alt+v\",\n        \"command\": \"editor.action.transformToLowercase\"\n    },\n    {\n        \"key\": \"alt+b\",\n        \"command\": \"editor.action.transformToUppercase\"\n    },\n    {\n        \"key\": \"alt+e\",\n        \"command\": \"editor.action.jumpToBracket\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"ctrl+shift+\\\\\",\n        \"command\": \"-editor.action.jumpToBracket\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"alt+q\",\n        \"command\": \"cursorWordStartLeft\"\n    },\n    {\n        \"key\": \"ctrl+k ctrl+l\",\n        \"command\": \"-editor.toggleFold\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"f1\",\n        \"command\": \"-workbench.action.showCommands\"\n    },\n    {\n        \"key\": \"ctrl+1\",\n        \"command\": \"-workbench.action.focusFirstEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+2\",\n        \"command\": \"-workbench.action.focusSecondEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+3\",\n        \"command\": \"-workbench.action.focusThirdEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+4\",\n        \"command\": \"-workbench.action.focusFourthEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+5\",\n        \"command\": \"-workbench.action.focusFifthEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+6\",\n        \"command\": \"-workbench.action.focusSixthEditorGroup\"\n    },\n    {\n        \"key\": \"shift+alt+a\",\n        \"command\": \"-editor.action.blockComment\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+s\",\n        \"command\": \"-PowerShell.ShowAdditionalCommands\",\n        \"when\": \"editorTextFocus && editorLangId == 'powershell'\"\n    },\n]"
        },
        {
            "date": "2023-09-14 14:47:25",
            "keybindings": "// Place your key bindings in this file to override the defaults\n[\n    {\n        \"key\": \"ctrl+tab\",\n        \"command\": \"-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\",\n        \"when\": \"!activeEditorGroupEmpty\"\n    },\n    {\n        \"key\": \"ctrl+shift+tab\",\n        \"command\": \"-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\",\n        \"when\": \"!activeEditorGroupEmpty\"\n    },\n    {\n        \"key\": \"ctrl+tab\",\n        \"command\": \"workbench.action.nextEditorInGroup\"\n    },\n    {\n        \"key\": \"ctrl+shift+tab\",\n        \"command\": \"workbench.action.previousEditorInGroup\"\n    },\n    {\n        \"key\": \"shift+alt+d\",\n        \"command\": \"-editor.detectLanguage\",\n        \"when\": \"editorTextFocus && !notebookEditable\"\n    },\n    {\n        \"key\": \"shift+alt+d\",\n        \"command\": \"-notebook.cell.detectLanguage\",\n        \"when\": \"notebookCellEditable && notebookEditable\"\n    },\n    {\n        \"key\": \"shift+alt+a\",\n        \"command\": \"editor.foldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"shift+alt+o\",\n        \"command\": \"-editor.action.organizeImports\",\n        \"when\": \"editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\\\s|^)source\\\\.organizeImports\\\\b/\"\n    },\n    {\n        \"key\": \"shift+alt+o\",\n        \"command\": \"editor.action.insertLineBefore\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+k\",\n        \"command\": \"editor.action.moveLinesUpAction\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+j\",\n        \"command\": \"editor.action.moveLinesDownAction\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"ctrl+numpad0\",\n        \"command\": \"-workbench.action.zoomReset\"\n    },\n    {\n        \"key\": \"shift+alt+e\",\n        \"command\": \"-PowerShell.ExpandAlias\",\n        \"when\": \"editorTextFocus && editorLangId == 'powershell'\"\n    },\n    {\n        \"key\": \"shift+alt+s\",\n        \"command\": \"editor.unfoldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"ctrl+k ctrl+j\",\n        \"command\": \"-editor.unfoldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"alt+4\",\n        \"command\": \"references-view.findReferences\",\n        \"when\": \"editorHasReferenceProvider\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"-toggleFindInSelection\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"-toggleSearchEditorContextLines\",\n        \"when\": \"inSearchEditor\"\n    },\n    {\n        \"key\": \"alt+h\",\n        \"command\": \"-testing.toggleTestingPeekHistory\",\n        \"when\": \"testing.isPeekVisible\"\n    },\n    {\n        \"key\": \"alt+h\",\n        \"command\": \"cursorLeft\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"cursorRight\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"cursorUp\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"-keybindings.editor.recordSearchKeys\",\n        \"when\": \"inKeybindings && inKeybindingsSearch\"\n    },\n    {\n        \"key\": \"alt+j\",\n        \"command\": \"cursorDown\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+u\",\n        \"command\": \"undo\"\n    },\n    {\n        \"key\": \"alt+j\",\n        \"command\": \"selectNextSuggestion\",\n        \"when\": \"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"selectPrevSuggestion\",\n        \"when\": \"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"editor.action.insertLineAfter\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"-C_Cpp.SwitchHeaderSource\",\n        \"when\": \"editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'\"\n    },\n    {\n        \"key\": \"alt+1\",\n        \"command\": \"-workbench.action.openEditorAtIndex1\"\n    },\n    {\n        \"key\": \"alt+`\",\n        \"command\": \"workbench.action.navigateBack\",\n        \"when\": \"canNavigateBack\"\n    },\n    {\n        \"key\": \"alt+2\",\n        \"command\": \"-workbench.action.openEditorAtIndex2\"\n    },\n    {\n        \"key\": \"alt+1\",\n        \"command\": \"editor.action.revealDeclaration\",\n        \"when\": \"editorHasDeclarationProvider && editorTextFocus && !isInEmbeddedEditor\"\n    },\n    {\n        \"key\": \"alt+3\",\n        \"command\": \"-workbench.action.openEditorAtIndex3\"\n    },\n    {\n        \"key\": \"alt+2\",\n        \"command\": \"editor.action.revealDefinition\",\n        \"when\": \"editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\"\n    },\n    {\n        \"key\": \"alt+4\",\n        \"command\": \"-workbench.action.openEditorAtIndex4\"\n    },\n    {\n        \"key\": \"alt+3\",\n        \"command\": \"editor.action.goToTypeDefinition\",\n        \"when\": \"editorHasTypeDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\",\n    },\n    {\n        \"key\": \"alt+5\",\n        \"command\": \"-workbench.action.openEditorAtIndex5\"\n    },\n    {\n        \"key\": \"alt+6\",\n        \"command\": \"-workbench.action.openEditorAtIndex6\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleSearchEditorWholeWord\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleFindWholeWord\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleSearchWholeWord\",\n        \"when\": \"searchViewletFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-workbench.action.terminal.toggleFindWholeWord\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"cursorWordEndRight\",\n        \"when\": \"textInputFocus && !accessibilityModeEnabled\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleSearchEditorRegex\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-workbench.action.terminal.toggleFindRegex\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleFindRegex\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleSearchRegex\",\n        \"when\": \"searchViewletFocus\"\n    },\n    {\n        \"key\": \"alt+a\",\n        \"command\": \"cursorLineStart\"\n    },\n    {\n        \"key\": \"alt+s\",\n        \"command\": \"cursorLineEnd\"\n    },\n    {\n        \"key\": \"alt+d\",\n        \"command\": \"deleteWordLeft\",\n        \"when\": \"textInputFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"-workbench.action.terminal.sizeToContentWidth\",\n        \"when\": \"terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"-editor.action.toggleWordWrap\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"editor.action.quickFix\",\n        \"when\": \"editorHasCodeActionsProvider && editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+x\",\n        \"command\": \"deleteLeft\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"-toggleSearchEditorCaseSensitive\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"-workbench.action.terminal.toggleFindCaseSensitive\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"editor.action.transformToTitlecase\"\n    },\n    {\n        \"key\": \"alt+v\",\n        \"command\": \"editor.action.transformToLowercase\"\n    },\n    {\n        \"key\": \"alt+b\",\n        \"command\": \"editor.action.transformToUppercase\"\n    },\n    {\n        \"key\": \"alt+e\",\n        \"command\": \"editor.action.jumpToBracket\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"ctrl+shift+\\\\\",\n        \"command\": \"-editor.action.jumpToBracket\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"alt+q\",\n        \"command\": \"cursorWordStartLeft\"\n    },\n    {\n        \"key\": \"ctrl+k ctrl+l\",\n        \"command\": \"-editor.toggleFold\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"f1\",\n        \"command\": \"-workbench.action.showCommands\"\n    },\n    {\n        \"key\": \"ctrl+1\",\n        \"command\": \"-workbench.action.focusFirstEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+2\",\n        \"command\": \"-workbench.action.focusSecondEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+3\",\n        \"command\": \"-workbench.action.focusThirdEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+4\",\n        \"command\": \"-workbench.action.focusFourthEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+5\",\n        \"command\": \"-workbench.action.focusFifthEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+6\",\n        \"command\": \"-workbench.action.focusSixthEditorGroup\"\n    },\n    {\n        \"key\": \"shift+alt+a\",\n        \"command\": \"-editor.action.blockComment\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+s\",\n        \"command\": \"-PowerShell.ShowAdditionalCommands\",\n        \"when\": \"editorTextFocus && editorLangId == 'powershell'\"\n    },\n    {\n        \"key\": \"alt+5\",\n        \"command\": \"clangd.switchheadersource\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"-clangd.switchheadersource\",\n        \"when\": \"editorTextFocus\"\n    },\n]"
        },
        {
            "date": "2024-01-17 02:04:42",
            "keybindings": "// Place your key bindings in this file to override the defaults\n[\n    {\n        \"key\": \"ctrl+tab\",\n        \"command\": \"-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\",\n        \"when\": \"!activeEditorGroupEmpty\"\n    },\n    {\n        \"key\": \"ctrl+shift+tab\",\n        \"command\": \"-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\",\n        \"when\": \"!activeEditorGroupEmpty\"\n    },\n    {\n        \"key\": \"ctrl+tab\",\n        \"command\": \"workbench.action.nextEditorInGroup\"\n    },\n    {\n        \"key\": \"ctrl+shift+tab\",\n        \"command\": \"workbench.action.previousEditorInGroup\"\n    },\n    {\n        \"key\": \"shift+alt+d\",\n        \"command\": \"-editor.detectLanguage\",\n        \"when\": \"editorTextFocus && !notebookEditable\"\n    },\n    {\n        \"key\": \"shift+alt+d\",\n        \"command\": \"-notebook.cell.detectLanguage\",\n        \"when\": \"notebookCellEditable && notebookEditable\"\n    },\n    {\n        \"key\": \"shift+alt+a\",\n        \"command\": \"editor.foldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"shift+alt+o\",\n        \"command\": \"-editor.action.organizeImports\",\n        \"when\": \"editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\\\s|^)source\\\\.organizeImports\\\\b/\"\n    },\n    {\n        \"key\": \"shift+alt+o\",\n        \"command\": \"editor.action.insertLineBefore\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+k\",\n        \"command\": \"editor.action.moveLinesUpAction\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+j\",\n        \"command\": \"editor.action.moveLinesDownAction\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"ctrl+numpad0\",\n        \"command\": \"-workbench.action.zoomReset\"\n    },\n    {\n        \"key\": \"shift+alt+e\",\n        \"command\": \"-PowerShell.ExpandAlias\",\n        \"when\": \"editorTextFocus && editorLangId == 'powershell'\"\n    },\n    {\n        \"key\": \"shift+alt+s\",\n        \"command\": \"editor.unfoldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"ctrl+k ctrl+j\",\n        \"command\": \"-editor.unfoldAll\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"alt+4\",\n        \"command\": \"references-view.findReferences\",\n        \"when\": \"editorHasReferenceProvider\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"-toggleFindInSelection\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"-toggleSearchEditorContextLines\",\n        \"when\": \"inSearchEditor\"\n    },\n    {\n        \"key\": \"alt+h\",\n        \"command\": \"-testing.toggleTestingPeekHistory\",\n        \"when\": \"testing.isPeekVisible\"\n    },\n    {\n        \"key\": \"alt+h\",\n        \"command\": \"cursorLeft\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+l\",\n        \"command\": \"cursorRight\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"cursorUp\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"-keybindings.editor.recordSearchKeys\",\n        \"when\": \"inKeybindings && inKeybindingsSearch\"\n    },\n    {\n        \"key\": \"alt+j\",\n        \"command\": \"cursorDown\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+u\",\n        \"command\": \"undo\"\n    },\n    {\n        \"key\": \"alt+j\",\n        \"command\": \"selectNextSuggestion\",\n        \"when\": \"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\"\n    },\n    {\n        \"key\": \"alt+k\",\n        \"command\": \"selectPrevSuggestion\",\n        \"when\": \"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"editor.action.insertLineAfter\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"-C_Cpp.SwitchHeaderSource\",\n        \"when\": \"editorTextFocus && editorLangId == 'c' || editorTextFocus && editorLangId == 'cpp' || editorTextFocus && editorLangId == 'cuda-cpp'\"\n    },\n    {\n        \"key\": \"alt+1\",\n        \"command\": \"-workbench.action.openEditorAtIndex1\"\n    },\n    {\n        \"key\": \"alt+`\",\n        \"command\": \"workbench.action.navigateBack\",\n        \"when\": \"canNavigateBack\"\n    },\n    {\n        \"key\": \"alt+2\",\n        \"command\": \"-workbench.action.openEditorAtIndex2\"\n    },\n    {\n        \"key\": \"alt+1\",\n        \"command\": \"editor.action.revealDeclaration\",\n        \"when\": \"editorHasDeclarationProvider && editorTextFocus && !isInEmbeddedEditor\"\n    },\n    {\n        \"key\": \"alt+3\",\n        \"command\": \"-workbench.action.openEditorAtIndex3\"\n    },\n    {\n        \"key\": \"alt+2\",\n        \"command\": \"editor.action.revealDefinition\",\n        \"when\": \"editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\"\n    },\n    {\n        \"key\": \"alt+4\",\n        \"command\": \"-workbench.action.openEditorAtIndex4\"\n    },\n    {\n        \"key\": \"alt+3\",\n        \"command\": \"editor.action.goToTypeDefinition\",\n        \"when\": \"editorHasTypeDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\",\n    },\n    {\n        \"key\": \"alt+5\",\n        \"command\": \"-workbench.action.openEditorAtIndex5\"\n    },\n    {\n        \"key\": \"alt+6\",\n        \"command\": \"-workbench.action.openEditorAtIndex6\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleSearchEditorWholeWord\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleFindWholeWord\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-toggleSearchWholeWord\",\n        \"when\": \"searchViewletFocus\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"-workbench.action.terminal.toggleFindWholeWord\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+s\",\n        \"command\": \"cursorWordEndRight\",\n        \"when\": \"textInputFocus && !accessibilityModeEnabled\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleSearchEditorRegex\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-workbench.action.terminal.toggleFindRegex\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleFindRegex\",\n        \"when\": \"editorFocus\"\n    },\n    {\n        \"key\": \"alt+r\",\n        \"command\": \"-toggleSearchRegex\",\n        \"when\": \"searchViewletFocus\"\n    },\n    {\n        \"key\": \"alt+q\",\n        \"command\": \"cursorLineStart\"\n    },\n    {\n        \"key\": \"alt+w\",\n        \"command\": \"cursorLineEnd\"\n    },\n    {\n        \"key\": \"alt+d\",\n        \"command\": \"deleteWordLeft\",\n        \"when\": \"textInputFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"-workbench.action.terminal.sizeToContentWidth\",\n        \"when\": \"terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"-editor.action.toggleWordWrap\"\n    },\n    {\n        \"key\": \"alt+z\",\n        \"command\": \"editor.action.quickFix\",\n        \"when\": \"editorHasCodeActionsProvider && editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"alt+x\",\n        \"command\": \"deleteLeft\",\n        \"when\": \"textInputFocus\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"-toggleSearchEditorCaseSensitive\",\n        \"when\": \"inSearchEditor && searchInputBoxFocus\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"-workbench.action.terminal.toggleFindCaseSensitive\",\n        \"when\": \"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\"\n    },\n    {\n        \"key\": \"alt+c\",\n        \"command\": \"editor.action.transformToTitlecase\"\n    },\n    {\n        \"key\": \"alt+v\",\n        \"command\": \"editor.action.transformToLowercase\"\n    },\n    {\n        \"key\": \"alt+b\",\n        \"command\": \"editor.action.transformToUppercase\"\n    },\n    {\n        \"key\": \"alt+e\",\n        \"command\": \"editor.action.jumpToBracket\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"ctrl+shift+\\\\\",\n        \"command\": \"-editor.action.jumpToBracket\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"alt+a\",\n        \"command\": \"cursorWordStartLeft\"\n    },\n    {\n        \"key\": \"ctrl+k ctrl+l\",\n        \"command\": \"-editor.toggleFold\",\n        \"when\": \"editorTextFocus && foldingEnabled\"\n    },\n    {\n        \"key\": \"f1\",\n        \"command\": \"-workbench.action.showCommands\"\n    },\n    {\n        \"key\": \"ctrl+1\",\n        \"command\": \"-workbench.action.focusFirstEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+2\",\n        \"command\": \"-workbench.action.focusSecondEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+3\",\n        \"command\": \"-workbench.action.focusThirdEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+4\",\n        \"command\": \"-workbench.action.focusFourthEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+5\",\n        \"command\": \"-workbench.action.focusFifthEditorGroup\"\n    },\n    {\n        \"key\": \"ctrl+6\",\n        \"command\": \"-workbench.action.focusSixthEditorGroup\"\n    },\n    {\n        \"key\": \"shift+alt+a\",\n        \"command\": \"-editor.action.blockComment\",\n        \"when\": \"editorTextFocus && !editorReadonly\"\n    },\n    {\n        \"key\": \"shift+alt+s\",\n        \"command\": \"-PowerShell.ShowAdditionalCommands\",\n        \"when\": \"editorTextFocus && editorLangId == 'powershell'\"\n    },\n    {\n        \"key\": \"alt+5\",\n        \"command\": \"clangd.switchheadersource\",\n        \"when\": \"editorTextFocus\"\n    },\n    {\n        \"key\": \"alt+o\",\n        \"command\": \"-clangd.switchheadersource\",\n        \"when\": \"editorTextFocus\"\n    },\n]"
        }
    ],
    "powershell_profile_history": [
        {
            "date": "2023-09-09 23:10:03",
            "profile": "Set-PSReadLineOption -EditMode Emacs\n\nfunction Prompt {\n  $cwd = $(Get-Location).Path.Split(\"\\\")\n  if ($cwd.Length -gt 2) {\n    if (($cwd[0] -eq \"C:\") -and ($cwd[1] -eq \"Users\") -and ($cwd[2] -eq \"realzh\")) {\n      $cwd = (, \"~\") + $cwd[3..($cwd.Length - 1)]\n    }\n  }\n  if ($cwd.Length -gt 4) {\n    $cwd = (, $cwd[0]) + (, \"...\") + $cwd[-3..-1]\n  }\n  \"PS \" + [System.String]::Join(\"\\\", $cwd) + \"$ \"\n}\n\nfunction venv {\n\n  if ($null -ne $env:VIRTUAL_ENV) {\n    deactivate\n  }\n  elseif (Test-Path -Path \".venv\") {\n    .\\.venv\\Scripts\\activate.ps1\n  }\n  else {\n    Write-Host \"VENV doesn't exist. Creating a new one...\"\n    python -m venv .venv \n    .\\.venv\\Scripts\\activate.ps1\n  }\n\n}\n\nfunction idfInit {\n  & \"D:\\Espressif\\frameworks\\esp-idf-v5.1\\export.ps1\"\n  $Env:IDF_TARGET = \"esp32c6\"\n  Set-Alias -Scope Global idf idf.py.exe\n}\n\nfunction datetime {\n  $v = Get-Date -Format \"yyyyMMdd-HHmmss\"\n  Set-Clipboard -Value  $v\n  Write-Host $v\n}\n\nfunction generatePassword {\n\n  $output = ''\n  for ($i = 0; $i -lt 8; $i++) {\n    $output += [char]((65..90) | Get-Random)  # upper letter\n    $output += [char]((97..122) | Get-Random) # lower letter\n    $output += [char]((48..57) | Get-Random) # digit\n  }\n  Write-Host $output\n}\n\nfunction renamePDFs {\n  foreach ($file in (Get-ChildItem | Where-Object { $_.Name.EndsWith(\".pdf\") })) {\n    $oldName = $file.Name\n    $newName = ($oldName.Substring(0, $file.Name.Length - 4) -replace \"(\\(|\\)| |\\.|,)+\", \"-\"), \".pdf\" -join ''\n    Write-Host -NoNewline \"   $oldName`n-> $newName`n?\"\n    $key = [System.Console]::ReadKey($true)\n    if ($key.Key -ne \"Enter\") {\n      return\n    }\n    Write-Host \" OK\"\n    Rename-Item $oldName $newName\n  }\n}\n\n\nfunction bin {\n  param (\n    [Parameter(Mandatory, ValueFromPipeline)]\n    [int]$x, [int]$Length = 0\n  )\n  $raw = [Convert]::ToString($x, 2)\n  $rawLength = $raw.Length\n  if ($Length -ne 0 -and $rawLength -gt $Length) {\n    Write-Host -ForegroundColor Yellow \"Output length $rawLength is greater than specified length $Length\"\n  }\n  \"0b\" + $raw.PadLeft($Length, '0')\n}\n\nfunction hex {\n  param (\n    [Parameter(Mandatory, ValueFromPipeline)]\n    [int]$x, [int]$Length = 0\n  )\n  $raw = [Convert]::ToString($x, 16).ToUpper()\n  $rawLength = $raw.Length\n  if ($Length -ne 0 -and $rawLength -gt $Length) {\n    Write-Host -ForegroundColor Yellow \"Output length $rawLength is greater than specified length $Length\"\n  }\n  \"0x\" + $raw.PadLeft($Length, '0')\n}"
        },
        {
            "date": "2024-01-17 02:04:42",
            "profile": "Set-PSReadLineOption -EditMode Emacs\n\nfunction Prompt {\n  $cwd = $(Get-Location).Path.Split(\"\\\")\n  if ($cwd.Length -gt 2) {\n    if (($cwd[0] -eq \"C:\") -and ($cwd[1] -eq \"Users\") -and ($cwd[2] -eq \"realzh\")) {\n      $cwd = (, \"~\") + $cwd[3..($cwd.Length - 1)]\n    }\n  }\n  if ($cwd.Length -gt 4) {\n    $cwd = (, $cwd[0]) + (, \"...\") + $cwd[-3..-1]\n  }\n  \"PS \" + [System.String]::Join(\"\\\", $cwd) + \"$ \"\n}\n\nfunction venv {\n\n  if ($null -ne $env:VIRTUAL_ENV) {\n    deactivate\n  }\n  elseif (Test-Path -Path \".venv\") {\n    .\\.venv\\Scripts\\activate.ps1\n  }\n  else {\n    Write-Host \"VENV doesn't exist. Creating a new one...\"\n    python -m venv .venv \n    .\\.venv\\Scripts\\activate.ps1\n  }\n\n}\n\nfunction idf ($arg = \"help\") {\n  if ($arg -eq \"init\") {\n    & \"D:\\esp-idf-v5.1.1\\export.ps1\"\n    $Env:IDF_TARGET = \"esp32c6\"\n    return\n  }\n\n  idf.py.exe $arg \n}\n\nfunction datetime {\n  $v = Get-Date -Format \"yyyyMMdd-HHmmss\"\n  Set-Clipboard -Value  $v\n  Write-Host $v\n}\n\nfunction generatePassword {\n\n  $output = ''\n  for ($i = 0; $i -lt 8; $i++) {\n    $output += [char]((65..90) | Get-Random)  # upper letter\n    $output += [char]((97..122) | Get-Random) # lower letter\n    $output += [char]((48..57) | Get-Random) # digit\n  }\n  Write-Host $output\n}\n\nfunction pdfRename {\n  foreach ($file in (Get-ChildItem | Where-Object { $_.Name.EndsWith(\".pdf\") })) {\n    $oldName = $file.Name\n    $newName = ($oldName.Substring(0, $file.Name.Length - 4) -replace \"(\\(|\\)| |\\.|,)+\", \"-\"), \".pdf\" -join ''\n    Write-Host -NoNewline \"   $oldName`n-> $newName`n?\"\n    $key = [System.Console]::ReadKey($true)\n    if ($key.Key -ne \"Enter\") {\n      return\n    }\n    Write-Host \" OK\"\n    Rename-Item $oldName $newName\n  }\n}\n\n\nfunction bin {\n  param (\n    [Parameter(Mandatory, ValueFromPipeline)]\n    [int]$x, [int]$Length = 0\n  )\n  $raw = [Convert]::ToString($x, 2)\n  $rawLength = $raw.Length\n  if ($Length -ne 0 -and $rawLength -gt $Length) {\n    Write-Host -ForegroundColor Yellow \"Output length $rawLength is greater than specified length $Length\"\n  }\n  \"0b\" + $raw.PadLeft($Length, '0')\n}\n\nfunction hex {\n  param (\n    [Parameter(Mandatory, ValueFromPipeline)]\n    [int]$x, [int]$Length = 0\n  )\n  $raw = [Convert]::ToString($x, 16).ToUpper()\n  $rawLength = $raw.Length\n  if ($Length -ne 0 -and $rawLength -gt $Length) {\n    Write-Host -ForegroundColor Yellow \"Output length $rawLength is greater than specified length $Length\"\n  }\n  \"0x\" + $raw.PadLeft($Length, '0')\n}"
        }
    ],
    "vsc_settings_history": [
        {
            "date": "2023-09-09 23:10:03",
            "settings": "{\n    \"[css]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[html]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[javascript]\": {\n        \"editor.defaultFormatter\": \"vscode.typescript-language-features\"\n    },\n    \"[json]\": {\n        \"editor.defaultFormatter\": \"vscode.json-language-features\"\n    },\n    \"[jsonc]\": {\n        \"editor.defaultFormatter\": \"vscode.json-language-features\"\n    },\n    \"[python]\": {\n        \"editor.formatOnType\": true,\n        \"editor.defaultFormatter\": \"ms-python.autopep8\"\n    },\n    \"[scss]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[typescript]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[typescriptreact]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"commentAnchors.epic.provideAutoCompletion\": false,\n    \"commentAnchors.tagHighlights.enabled\": true,\n    \"commentAnchors.tags.displayHierarchyInWorkspace\": false,\n    \"commentAnchors.tags.displayInGutter\": false,\n    \"commentAnchors.tags.displayInRuler\": false,\n    \"commentAnchors.tags.displayInSidebar\": false,\n    \"commentAnchors.tags.displayLineNumber\": false,\n    \"commentAnchors.tags.displayTagName\": true,\n    \"commentAnchors.workspace.enabled\": false,\n    \"editor.accessibilitySupport\": \"off\",\n    \"editor.minimap.enabled\": false,\n    \"editor.mouseWheelZoom\": true,\n    \"editor.unicodeHighlight.invisibleCharacters\": false,\n    \"emmet.excludeLanguages\": [\n        \"typescriptreact\",\n        \"javascriptreact\"\n    ],\n    \"explorer.confirmDelete\": false,\n    \"explorer.confirmDragAndDrop\": false,\n    \"explorer.copyRelativePathSeparator\": \"/\",\n    \"extensions.ignoreRecommendations\": true,\n    \"files.autoSave\": \"afterDelay\",\n    \"files.autoSaveDelay\": 200,\n    \"git.confirmSync\": false,\n    \"git.enableSmartCommit\": true,\n    \"git.ignoreMissingGitWarning\": true,\n    \"hexeditor.columnWidth\": 16,\n    \"hexeditor.defaultEndianness\": \"little\",\n    \"hexeditor.inspectorType\": \"aside\",\n    \"hexeditor.showDecodedText\": true,\n    \"jupyter.askForKernelRestart\": false,\n    \"jupyter.widgetScriptSources\": [\n        \"jsdelivr.com\",\n        \"unpkg.com\"\n    ],\n    \"notebook.lineNumbers\": \"on\",\n    \"outline.showEnums\": false,\n    \"outline.showStructs\": false,\n    \"powershell.promptToUpdatePowerShell\": false,\n    \"prettier.proseWrap\": \"never\",\n    \"remote.SSH.remotePlatform\": {\n        \"realzh.com\": \"linux\"\n    },\n    \"security.workspace.trust.enabled\": false,\n    \"terminal.integrated.enableMultiLinePasteWarning\": false,\n    \"terminal.integrated.mouseWheelScrollSensitivity\": 0.08,\n    \"typescript.updateImportsOnFileMove.enabled\": \"always\",\n    \"vsicons.dontShowNewVersionMessage\": true,\n    \"window.openFilesInNewWindow\": \"default\",\n    \"window.title\": \"${folderPath}\",\n    \"workbench.colorTheme\": \"Monokai Dimmed\",\n    \"workbench.iconTheme\": \"vscode-icons\",\n    \"workbench.startupEditor\": \"none\",\n    \"git.openRepositoryInParentFolders\": \"always\",\n    \"window.zoomLevel\": 1,\n    \"explorer.sortOrderLexicographicOptions\": \"lower\",\n    \"git.autoRepositoryDetection\": \"subFolders\",\n    \"files.associations\": {\n        \"*.inf\": \"ini\",\n        \".clangd\": \"yaml\",\n        \"sdkconfig\": \"ini\",\n        \"defconfig\": \"ini\"\n    },\n    \"clangd.path\": \"C:\\\\Program Files\\\\LLVM\\\\bin\\\\clangd.exe\",\n    \"C_Cpp.default.compileCommands\": \"build/compile_commands.json\",\n    \"C_Cpp.inlayHints.parameterNames.enabled\": true,\n    \"C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName\": false,\n    \"C_Cpp.intelliSenseEngine\": \"disabled\",\n    \"redhat.telemetry.enabled\": true,\n    \"clangd.arguments\": [\n        \"--compile-commands-dir=.\",\n        \"--function-arg-placeholders=0\"\n    ],\n    \"C_Cpp.clang_format_style\": \"file:C:\\\\Users\\\\realzh\\\\.clang-format\",\n    \"editor.gotoLocation.alternativeDefinitionCommand\": \"\",\n    \"editor.gotoLocation.alternativeDeclarationCommand\": \"\",\n    \"editor.gotoLocation.alternativeTypeDefinitionCommand\": \"\",\n    \"python.analysis.autoFormatStrings\": true,\n    \"python.analysis.autoImportCompletions\": true,\n    \"python.analysis.completeFunctionParens\": true\n}"
        },
        {
            "date": "2023-09-14 14:47:26",
            "settings": "{\n    \"[css]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[html]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[javascript]\": {\n        \"editor.defaultFormatter\": \"vscode.typescript-language-features\"\n    },\n    \"[json]\": {\n        \"editor.defaultFormatter\": \"vscode.json-language-features\"\n    },\n    \"[jsonc]\": {\n        \"editor.defaultFormatter\": \"vscode.json-language-features\"\n    },\n    \"[python]\": {\n        \"editor.formatOnType\": true,\n        \"editor.defaultFormatter\": \"ms-python.autopep8\"\n    },\n    \"[scss]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[typescript]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[typescriptreact]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"commentAnchors.epic.provideAutoCompletion\": false,\n    \"commentAnchors.tagHighlights.enabled\": true,\n    \"commentAnchors.tags.displayHierarchyInWorkspace\": false,\n    \"commentAnchors.tags.displayInGutter\": false,\n    \"commentAnchors.tags.displayInRuler\": false,\n    \"commentAnchors.tags.displayInSidebar\": false,\n    \"commentAnchors.tags.displayLineNumber\": false,\n    \"commentAnchors.tags.displayTagName\": true,\n    \"commentAnchors.workspace.enabled\": false,\n    \"editor.accessibilitySupport\": \"off\",\n    \"editor.minimap.enabled\": false,\n    \"editor.mouseWheelZoom\": true,\n    \"editor.unicodeHighlight.invisibleCharacters\": false,\n    \"emmet.excludeLanguages\": [\n        \"typescriptreact\",\n        \"javascriptreact\"\n    ],\n    \"explorer.confirmDelete\": false,\n    \"explorer.confirmDragAndDrop\": false,\n    \"explorer.copyRelativePathSeparator\": \"/\",\n    \"extensions.ignoreRecommendations\": true,\n    \"files.autoSave\": \"afterDelay\",\n    \"files.autoSaveDelay\": 200,\n    \"git.confirmSync\": false,\n    \"git.enableSmartCommit\": true,\n    \"git.ignoreMissingGitWarning\": true,\n    \"hexeditor.columnWidth\": 16,\n    \"hexeditor.defaultEndianness\": \"little\",\n    \"hexeditor.inspectorType\": \"aside\",\n    \"hexeditor.showDecodedText\": true,\n    \"jupyter.askForKernelRestart\": false,\n    \"jupyter.widgetScriptSources\": [\n        \"jsdelivr.com\",\n        \"unpkg.com\"\n    ],\n    \"notebook.lineNumbers\": \"on\",\n    \"outline.showEnums\": false,\n    \"outline.showStructs\": false,\n    \"powershell.promptToUpdatePowerShell\": false,\n    \"prettier.proseWrap\": \"never\",\n    \"remote.SSH.remotePlatform\": {\n        \"realzh.com\": \"linux\"\n    },\n    \"security.workspace.trust.enabled\": false,\n    \"terminal.integrated.enableMultiLinePasteWarning\": false,\n    \"terminal.integrated.mouseWheelScrollSensitivity\": 0.08,\n    \"typescript.updateImportsOnFileMove.enabled\": \"always\",\n    \"vsicons.dontShowNewVersionMessage\": true,\n    \"window.openFilesInNewWindow\": \"default\",\n    \"window.title\": \"${folderPath}\",\n    \"workbench.colorTheme\": \"Monokai Dimmed\",\n    \"workbench.iconTheme\": \"vscode-icons\",\n    \"workbench.startupEditor\": \"none\",\n    \"git.openRepositoryInParentFolders\": \"always\",\n    \"window.zoomLevel\": 1,\n    \"explorer.sortOrderLexicographicOptions\": \"lower\",\n    \"git.autoRepositoryDetection\": \"subFolders\",\n    \"files.associations\": {\n        \"*.inf\": \"ini\",\n        \".clangd\": \"yaml\",\n        \"sdkconfig\": \"ini\",\n        \"defconfig\": \"ini\"\n    },\n    \"clangd.path\": \"C:\\\\Program Files\\\\LLVM\\\\bin\\\\clangd.exe\",\n    \"C_Cpp.default.compileCommands\": \"build/compile_commands.json\",\n    \"C_Cpp.inlayHints.parameterNames.enabled\": true,\n    \"C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName\": false,\n    \"C_Cpp.intelliSenseEngine\": \"disabled\",\n    \"redhat.telemetry.enabled\": true,\n    \"clangd.arguments\": [\n        \"--compile-commands-dir=.\",\n        \"--function-arg-placeholders=0\"\n    ],\n    \"C_Cpp.clang_format_style\": \"file:C:\\\\Users\\\\realzh\\\\.clang-format\",\n    \"editor.gotoLocation.alternativeDefinitionCommand\": \"\",\n    \"editor.gotoLocation.alternativeDeclarationCommand\": \"\",\n    \"editor.gotoLocation.alternativeTypeDefinitionCommand\": \"\",\n    \"python.analysis.autoFormatStrings\": true,\n    \"python.analysis.autoImportCompletions\": true,\n    \"python.analysis.completeFunctionParens\": true,\n    \"editor.dragAndDrop\": false,\n    \"window.commandCenter\": false,\n    \"workbench.layoutControl.enabled\": false\n}"
        },
        {
            "date": "2024-01-17 02:04:42",
            "settings": "{\n    \"[css]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[html]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[javascript]\": {\n        \"editor.defaultFormatter\": \"vscode.typescript-language-features\"\n    },\n    \"[json]\": {\n        \"editor.defaultFormatter\": \"vscode.json-language-features\"\n    },\n    \"[jsonc]\": {\n        \"editor.defaultFormatter\": \"vscode.json-language-features\"\n    },\n    \"[python]\": {\n        \"editor.formatOnType\": true,\n        \"editor.defaultFormatter\": \"ms-python.autopep8\"\n    },\n    \"[scss]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[typescript]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"[typescriptreact]\": {\n        \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n    },\n    \"commentAnchors.epic.provideAutoCompletion\": false,\n    \"commentAnchors.tagHighlights.enabled\": true,\n    \"commentAnchors.tags.displayHierarchyInWorkspace\": false,\n    \"commentAnchors.tags.displayInGutter\": false,\n    \"commentAnchors.tags.displayInRuler\": false,\n    \"commentAnchors.tags.displayInSidebar\": false,\n    \"commentAnchors.tags.displayLineNumber\": false,\n    \"commentAnchors.tags.displayTagName\": true,\n    \"commentAnchors.workspace.enabled\": false,\n    \"editor.accessibilitySupport\": \"off\",\n    \"editor.minimap.enabled\": false,\n    \"editor.mouseWheelZoom\": true,\n    \"editor.unicodeHighlight.invisibleCharacters\": false,\n    \"emmet.excludeLanguages\": [\n        \"typescriptreact\",\n        \"javascriptreact\"\n    ],\n    \"explorer.confirmDelete\": false,\n    \"explorer.confirmDragAndDrop\": false,\n    \"explorer.copyRelativePathSeparator\": \"/\",\n    \"extensions.ignoreRecommendations\": true,\n    \"files.autoSave\": \"afterDelay\",\n    \"files.autoSaveDelay\": 200,\n    \"git.confirmSync\": false,\n    \"git.enableSmartCommit\": true,\n    \"git.ignoreMissingGitWarning\": true,\n    \"hexeditor.columnWidth\": 16,\n    \"hexeditor.defaultEndianness\": \"little\",\n    \"hexeditor.inspectorType\": \"aside\",\n    \"hexeditor.showDecodedText\": true,\n    \"jupyter.askForKernelRestart\": false,\n    \"jupyter.widgetScriptSources\": [\n        \"jsdelivr.com\",\n        \"unpkg.com\"\n    ],\n    \"notebook.lineNumbers\": \"on\",\n    \"outline.showEnums\": false,\n    \"outline.showStructs\": false,\n    \"powershell.promptToUpdatePowerShell\": false,\n    \"prettier.proseWrap\": \"never\",\n    \"remote.SSH.remotePlatform\": {\n        \"realzh.com\": \"linux\"\n    },\n    \"security.workspace.trust.enabled\": false,\n    \"terminal.integrated.enableMultiLinePasteWarning\": false,\n    \"terminal.integrated.mouseWheelScrollSensitivity\": 0.08,\n    \"typescript.updateImportsOnFileMove.enabled\": \"always\",\n    \"vsicons.dontShowNewVersionMessage\": true,\n    \"window.openFilesInNewWindow\": \"default\",\n    \"window.title\": \"${folderName} - ${activeEditorShort} - ${folderPath}\",\n    \"workbench.colorTheme\": \"Monokai Dimmed\",\n    \"workbench.iconTheme\": \"vscode-icons\",\n    \"workbench.startupEditor\": \"none\",\n    \"git.openRepositoryInParentFolders\": \"always\",\n    \"explorer.sortOrderLexicographicOptions\": \"lower\",\n    \"git.autoRepositoryDetection\": \"subFolders\",\n    \"files.associations\": {\n        \"*.inf\": \"ini\",\n        \".clangd\": \"yaml\",\n        \"sdkconfig\": \"ini\",\n        \"defconfig\": \"ini\"\n    },\n    \"clangd.path\": \"C:\\\\Program Files\\\\LLVM\\\\bin\\\\clangd.exe\",\n    \"C_Cpp.default.compileCommands\": \"build/compile_commands.json\",\n    \"C_Cpp.inlayHints.parameterNames.enabled\": true,\n    \"C_Cpp.intelliSenseEngine\": \"disabled\",\n    \"redhat.telemetry.enabled\": true,\n    \"clangd.arguments\": [\n        \"--compile-commands-dir=.\",\n        \"--function-arg-placeholders=0\"\n    ],\n    \"C_Cpp.clang_format_style\": \"file:C:\\\\Users\\\\realzh\\\\.clang-format\",\n    \"editor.gotoLocation.alternativeDefinitionCommand\": \"\",\n    \"editor.gotoLocation.alternativeDeclarationCommand\": \"\",\n    \"editor.gotoLocation.alternativeTypeDefinitionCommand\": \"\",\n    \"python.analysis.autoFormatStrings\": true,\n    \"python.analysis.autoImportCompletions\": true,\n    \"editor.dragAndDrop\": false,\n    \"window.commandCenter\": false,\n    \"workbench.layoutControl.enabled\": false,\n    \"[c]\": {\n        \"editor.defaultFormatter\": \"xaver.clang-format\"\n    },\n    \"[cpp]\": {\n        \"editor.defaultFormatter\": \"llvm-vs-code-extensions.vscode-clangd\"\n    },\n    \"python.formatting.provider\": \"none\",\n    \"C_Cpp.formatting\": \"clangFormat\",\n    \"autopep8.args\": [\n        \"--max-line-length=120\",\n        \"--select=E,W\"\n    ],\n    \"window.zoomLevel\": 1,\n    \"editor.unicodeHighlight.includeStrings\": false\n}"
        }
    ],
    "gitconfig": [
        {
            "date": "2023-09-09 23:10:03",
            "config": "[safe]\n\tdirectory = *\n[core]\n\tautocrlf = false\n[user]\n\temail = realrealzh@qq.com\n\tname = realzh\n[credential \"helperselector\"]\n\tselected = manager-core\n[init]\n\tdefaultBranch = main"
        },
        {
            "date": "2023-09-14 14:47:26",
            "config": "[safe]\n\tdirectory = *\n[core]\n\tautocrlf = false\n[user]\n\temail = realrealzh@qq.com\n\tname = realzh\n[credential \"helperselector\"]\n\tselected = manager-core\n[init]\n\tdefaultBranch = main\n[alias]\n\troot = rev-parse --show-toplevel\n"
        },
        {
            "date": "2024-01-17 02:04:42",
            "config": "[safe]\n\tdirectory = *\n[core]\n\tautocrlf = false\n\twhitespace = cr-at-eol\n[user]\n\temail = realrealzh@qq.com\n\tname = realzh\n[credential \"helperselector\"]\n\tselected = manager-core\n[init]\n\tdefaultBranch = main\n[alias]\n\troot = rev-parse --show-toplevel\n"
        }
    ]
}